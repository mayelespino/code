#!/bin/zsh
#
#
autoload -U promptinit && promptinit
autoload -U colors
autoload -U compinit
compinit
#
export PROMPT=' %F{011}%~ %F{021}❯%F{006}❯%F{014}❯%f '
export RPROMPT='%F{237}[rc:%?|h:%!]%f'
#
path+=('/usr/local/bin')
path+=('/Users/mayelespino/scripts')
#
export cdpath=( .  ~/ ~/Repos ~/Repos/code )
export HISTSIZE=50000
export HISTFILE=~/.zsh_history
export SAVEHIST=$HISTSIZE
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt append_history
setopt inc_append_history
setopt share_history
#
setopt correctall
setopt extendedglob
#
#bindkey -v
#bindkey '^R' history-incremental-search-backward
bindkey -e
#
export GOPATH=/Users/mayelespino/Repos/code/go-lang
export GOROOT=/usr/local/opt/go/libexec
#
alias l='ls -hF'
alias ll='ls -htAFl'
alias lc='ls -Fm'
alias l1='ls -1'
alias la='ls -aF'
alias L='ls -F | grep /'
alias c='clear'
alias gh='cd /x/local/maespino/githome/gimp'
alias ldr='ls -AF *|grep \/'
alias mp='ps -alumaespino | grep -v tcs| grep -v bash | grep -v ssh | grep -v grep'
#
alias d='pushd .'
#
alias D='dirs -lp| uniq'
alias v='/usr/local/bin/gvim -p'
#
# FUNCTIONS
#

# History
function H
{
    if [ -n "${1}" ]; then
        history -10000 | grep "${1}"
    else
        history -10000
    fi
}

# list directories like <param>
function lk
{
    ls | grep -i $1
}

# Code repo check in
function cci
{
    cd ~/Repos/code
    git add .
    if [ -z "${1}" ]; then
        git commit -m "update"
    else
        git commit -m "${1}"
    fi
    git push
    cd -
}

# Raspberry pi repo check in
function rpci
{
    cd ~/Repos/raspberry-pi
    git add .
    if [ -z "${1}" ]; then
        git commit -m "update"
    else
        git commit -m "${1}"
    fi
    git push
    cd -
}

# Push all repos (add, commit, push)
function pall
{
    for d in ~/Repos/*; do
        echo ">>> $d <<<"
        cd $d
        git add .
        git commit -m "update"
        git push
    done
    cd
}

# Help
function h
{
    grep function ~/.zshrc -B1
}


#
#
#

# Dirstack
DIRSTACKFILE="$HOME/.cache/zsh/dirs"
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
  [[ -d $dirstack[1] ]] && cd $dirstack[1]
fi
chpwd() {
  print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}

DIRSTACKSIZE=20

setopt AUTO_PUSHD PUSHD_SILENT PUSHD_TO_HOME

## Remove duplicate entries
setopt PUSHD_IGNORE_DUPS

## This reverts the +/- operators.
setopt PUSHD_MINUS
#
echo $0 $ZSH_VERSION $MACHTYPE $OSTYPE
